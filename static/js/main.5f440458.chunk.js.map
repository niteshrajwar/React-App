{"version":3,"sources":["components/Header.js","components/Login.js","App.js","index.js"],"names":["Header","className","to","Login","useState","email","setEmail","password","setPassword","token","setToken","onSubmit","e","preventDefault","req","fetch","method","headers","body","JSON","stringify","then","res","json","response","status","localStorage","setItem","catch","err","console","log","htmlFor","type","name","id","value","onChange","target","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAEe,SAASA,IACpB,OACQ,6BACI,yBAAKC,UAAU,mCACX,wBAAIA,UAAU,qBACV,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,YAAvB,WAEJ,wBAAIA,UAAU,YACV,kBAAC,IAAD,CAAMC,GAAG,SAASD,UAAU,YAA5B,e,WC0CbE,MAnDf,WAAkB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEmBF,mBAAS,IAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGaJ,mBAAS,MAHtB,mBAGNK,EAHM,KAGCC,EAHD,KAkCb,OACI,yBAAKT,UAAU,kBACX,0BAAMU,SAhCU,SAACC,GACrBA,EAAEC,iBACF,IAAIC,EAAM,CACN,MAAST,EACT,SAAYE,GAEhBQ,MAAM,8BAA+B,CACjCC,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,8BAA+B,IAC/B,+BACI,oFACF,+BACE,kBAERC,KAAMC,KAAKC,UAAUN,KAEpBO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACsB,MAApBA,EAASC,SACTf,EAASc,EAASf,OAClBiB,aAAaC,QAAQ,QAASR,KAAKC,UAAUX,QAIpDmB,OAAM,SAAAC,GACHC,QAAQC,IAAIF,QAMZ,yBAAK5B,UAAU,cACX,2BAAO+B,QAAQ,SAAf,SACA,2BAAO/B,UAAU,eAAegC,KAAK,QAAQC,KAAK,QAAQC,GAAG,QAAQC,MAAO/B,EAAOgC,SAAU,SAACzB,GAAQN,EAASM,EAAE0B,OAAOF,WAE5H,yBAAKnC,UAAU,cACX,2BAAO+B,QAAQ,SAAf,YACA,2BAAO/B,UAAU,eAAegC,KAAK,WAAWC,KAAK,WAAWC,GAAG,WAAWC,MAAO7B,EAAU8B,SAAU,SAACzB,GAAQJ,EAAYI,EAAE0B,OAAOF,WAE3I,4BAAQnC,UAAU,kBAAkBgC,KAAK,UAAzC,c,MC5BDM,MAdf,WACE,OAEK,kBAAC,IAAD,KACF,kBAACvC,EAAD,MAEA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOwC,KAAK,SAASC,UAAWtC,OCPrCuC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.5f440458.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nexport default function Header() {\r\n    return (\r\n            <div>\r\n                <nav className=\"navbar navbar-expand-sm bg-dark\">\r\n                    <ul className=\"navbar-nav inline\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\"> LOGO </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/login\" className=\"nav-link\"> Login </Link>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n\r\n            </div>\r\n\r\n\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [token, setToken] = useState(null);\r\n    const onSubmitHandler = (e) => {\r\n        e.preventDefault();\r\n        let req = {\r\n            \"email\": email,\r\n            \"password\": password\r\n        }\r\n        fetch('https://reqres.in/api/login', {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Headers\":\r\n                    \"Origin, X-Requested-With, Content-Type, Accept, Content-Type: 'application/json' \"\r\n                , \"Access-Control-Allow-Methods\":\r\n                    \"GET, POST, PUT\"\r\n            },\r\n            body: JSON.stringify(req)\r\n        })\r\n            .then(res => res.json())\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    setToken(response.token);\r\n                    localStorage.setItem(\"token\", JSON.stringify(token))\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form onSubmit={onSubmitHandler}>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Email</label>\r\n                    <input className=\"form-control\" type=\"email\" name=\"email\" id=\"email\" value={email} onChange={(e) => { setEmail(e.target.value) }} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\">Password</label>\r\n                    <input className=\"form-control\" type=\"password\" name=\"password\" id=\"password\" value={password} onChange={(e) => { setPassword(e.target.value) }} />\r\n                </div>\r\n                <button className=\"btn btn-success\" type=\"submit\">Sign In</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route,Switch} from 'react-router-dom';\nimport Header from './components/Header'\nimport Login from './components/Login'\nimport './App.css'\nfunction App() {\n  return (\n    // <div className=\"App\">\n       <Router>\n     <Header />\n    \n     <Switch>\n     <Route path=\"/login\" component={Login} />\n     </Switch>\n     </Router>\n    // </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter as Router} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}